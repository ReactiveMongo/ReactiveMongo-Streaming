version: 2.1

commands:
  setup_sbt:
    description: Get and install SBT
    parameters:
      sbt_version:
        type: string
        default: "1.10.1"
    steps:
      - restore_cache:
          keys:
          - &sbt_cache_key sbt-{{ checksum "project/build.properties" }}

      - run:
          name: Setup SBT
          command: |
                    if [ ! -x ~/sbt/bin/sbt ]; then
                      cd ~/
                      curl --silent -L -o sbt.tgz https://github.com/sbt/sbt/releases/download/v<< parameters.sbt_version >>/sbt-<< parameters.sbt_version >>.tgz
                      tar -xzvf sbt.tgz && rm -f sbt.tgz
                    fi

      - save_cache:
          paths:
            - ~/sbt
          key: *sbt_cache_key

  setup_integration:
    description: Setup integration environment
    steps:
      - restore_cache:
          keys:
          - &mongo_cache_key mongodb-{{ checksum ".ci_scripts/beforeInstall.sh" }}

      - run:
          name: Prepare integration environment
          command: |
                    if [ `which make | wc -l` -eq 0 ]; then
                      sudo apt update
                      sudo apt install build-essential
                    fi
                    ./.ci_scripts/beforeInstall.sh

      - save_cache:
          paths:
            - ~/ssl
            - ~/mongodb-linux-x86_64-amazon-3.6.6
          key: *mongo_cache_key

      - run:
          name: Start integration services
          command: |
                    export MONGO_CONF="/tmp/mongod.conf"
                    ./.ci_scripts/fork-mongod.sh /tmp/integration-env.sh
          background: true

  build_n_tests:
    description: Build & Run tests
    steps:
      - restore_cache:
          keys:
          - &scala_cache_key scala-{{ .Environment.CIRCLE_JOB }}-{{ checksum "build.sbt" }}-{{ checksum "project/Common.scala" }}

      - run:
          name: Build & Run tests
          command: |
                    export PATH=$PATH:~/sbt/bin
                    export USER=`basename $HOME`
                    
                    ./.ci_scripts/retry.sh 2 ./.ci_scripts/validate.sh

      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.coursier/cache
            - ~/.sbt
          key: *scala_cache_key

  collect_test_reports:
    description: Collect test reports
    steps:
      - run:
          name: Collect test report
          command: |
                    mkdir test-reports
                    find . -path '*/test-reports/*' -name '*.xml' \
                      -print -exec cp {} test-reports \;
          when: always

jobs:
  scala211_akka24:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      AKKA_VERSION: 2.4.10
      ITERATEES_VERSION: 2.3.10
      REACTIVEMONGO_SHADED: false
      SCALA_VERSION: 2.11.12
    
    steps:
      - checkout
      - setup_sbt
      - setup_integration
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  scala212_akka25:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      AKKA_VERSION: 2.5.23
      ITERATEES_VERSION: 2.6.1
      SCALA_VERSION: 2.12.19
    
    steps:
      - checkout
      - setup_sbt
      - setup_integration
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  scala213_akka26:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      AKKA_VERSION: 2.6.21
      ITERATEES_VERSION: no
      SCALA_VERSION: 2.13.14
    
    steps:
      - checkout
      - setup_sbt
      - setup_integration
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  scala3_akka26:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    environment:
      AKKA_VERSION: 2.6.21
      ITERATEES_VERSION: no
      SCALA_VERSION: 3.4.2

    steps:
      - checkout
      - setup_sbt
      - setup_integration
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  publish_snapshots:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo
    
    steps:
      - checkout
      - setup_sbt

      - restore_cache:
          keys:
          - &snapshot_cache_key scala-{{ .Environment.CIRCLE_JOB }}-{{ checksum "build.sbt" }}-{{ checksum "project/Common.scala" }}

      - deploy:
          name: Publish artifacts to Sonatype Snapshots
          command: |
                    if [ ! "${CIRCLE_BRANCH}" = "master" ]; then
                      echo "Skipped on branch ${CIRCLE_BRANCH}"
                      exit 0
                    fi

                    V=`sbt -Dsbt.log.noformat=true ';project akka-stream ;show version' | tail -n 1 | sed -e 's/^.* //g'`

                    echo "Static version: $V"

                    if [ `echo "$V" | grep -- '-SNAPSHOT' | wc -l` -eq 0 ]; then
                      S=`echo "$V" | perl -pe 's/([0-9]+)$/${\($1 + 1)}-SNAPSHOT/'`
                      echo "Cannot bump $V to $S"
                      echo "version in ThisBuild := \"$S\"" > version.sbt
                    fi
                    
                    export PUBLISH_REPO_NAME="Sonatype Nexus Repository Manager"
                    export PUBLISH_REPO_ID="oss.sonatype.org"
                    export PUBLISH_REPO_URL="https://oss.sonatype.org/content/repositories/snapshots"
                    
                    if [ "x$PUBLISH_USER" = "x" -o "x$PUBLISH_PASS" = "x" ]; then
                      echo "Missing publication credentials"
                      exit 1
                    fi
                    
                    sbt +publish

      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.coursier/cache
            - ~/.sbt
          key: *snapshot_cache_key

  trigger_dependent_builds:
    docker:
      - image: cimg/base:2020.01

    working_directory: ~/repo

    steps:
      - run:
          name: Trigger build @ Play-ReactiveMongo
          command: |
                    curl -X POST "https://circleci.com/api/v1.1/project/github/ReactiveMongo/Play-ReactiveMongo/build?circle-token=${PLAY_REACTIVEMONGO_API_TOKEN}"

workflows:
  version: 2

  main_suite:
    jobs:
      - scala211_akka24
      - scala212_akka25
      - scala213_akka26
      - scala3_akka26

      - publish_snapshots:
          filters:
            branches:
              only:
                - master
          requires:
            - scala211_akka24
            - scala212_akka25
            - scala213_akka26
            - scala3_akka26

      - trigger_dependent_builds:
          filters:
            branches:
              only:
                - master
          requires:
            - publish_snapshots
